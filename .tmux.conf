# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind-key -T copy-mode-vi C-h select-pane -L
# bind-key -T copy-mode-vi C-j select-pane -D
# bind-key -T copy-mode-vi C-k select-pane -U
# bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l
set -sg escape-time 0
bind-key -n M-] split-window -h
bind-key -n M-= split-window -v
bind-key -n M-m select-pane -U
bind-key -n M-u select-pane -L
set -g base-index 1
set -g mouse on

set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"
# Copy-paste integration
set-option -g default-shell "/bin/zsh"
# Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key -T prefix h copy-mode


# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -sel clip -i"
bind P paste-buffer
# # Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
# run-shell "pyenv activate powerline"
# /home/sysmanj/.pyenv/versions/3.6.4/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf
source-file "/home/sysmanj/.pyenv/versions/3.6.4/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf"
source-file "/home/sysmanj/.pyenv/versions/3.6.4/lib/python3.6/site-packages/powerline/bindings/tmux/powerline_tmux_2.1_plus.conf"
set -g prefix 'M-Space'

