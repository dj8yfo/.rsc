
set -sg escape-time 0
bind-key -n M-] split-window -h
bind-key -n M-[ split-window -v
bind-key -n M-m select-pane -U
bind-key -n M-u select-pane -L
bind-key -n M-0 select-pane -L \; resize-pane -Z
bind-key -n M-9 select-pane -U \; resize-pane -Z
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key R source-file ~/.tmux.conf \; \
        display-message "source-file done"

set -g base-index 1
set -g mouse on
set -g default-terminal "rxvt-256color"
set -ga terminal-overrides ",*256col*:Tc"
# Copy-paste integration
set-option -g default-shell "/bin/zsh"
# Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key -n M-- copy-mode
bind-key -n M-= copy-mode \; command-prompt -p "(search up)" "send -X search-backward \"%%%\""


# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -sel clip -i"
bind -T prefix i run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
bind -n M-\ run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

bind-key -T copy-mode-vi ? command-prompt -p "(search down)" "send -X search-forward \"%%%\""
bind-key -T copy-mode-vi / command-prompt -p "(search up)" "send -X search-backward \"%%%\""
# # Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
# run-shell "pyenv activate powerline"
# $HOME/.pyenv/versions/3.8.0b4/lib/python3.8/site-packages/powerline/bindings/tmux/powerline.conf
source-file "$HOME/.pyenv/versions/3.8.0b4/lib/python3.8/site-packages/powerline/bindings/tmux/powerline.conf"
source-file "$HOME/.pyenv/versions/3.8.0b4/lib/python3.8/site-packages/powerline/bindings/tmux/powerline_tmux_2.1_plus.conf"
set -g prefix 'M-Space'
source-file "${HOME}/.tmux-themepack/powerline/double/yellow.tmuxtheme"
set -g mode-style "fg=#00ff00 bg=#000000"
set -g window-active-style "bg=black"

bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow, 
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
# Update default binding of `Enter` to also use copy-pipe
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -sel clip -i"
